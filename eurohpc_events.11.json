[{"@context": "https://schema.org", "@graph": [{"@type": "Event", "name": "NOMAD&#039;s Midsummer School: Towards exascale solutions in Green function methods and advanced DFT", "url": "https://www.nomad-coe.eu/nomadmidsummerschoolriga", "description": "With 10^18 floating point operations per second, exascale computers will be able to simulate and analyze complex processes in real materials more realistically than what is possible today. This will allow to study systems of higher complexity (in space and time) and to achieve higher accuracy and precision. In close contact with academia and industry, the **NOMAD CoE** will develop exascale software, artificial intelligence (Al) methods, and efficient workflows for an advanced materials modeling. The **NOMAD School focusses on \"exascale solutions in Green function methods and advanced DFT\"**.\n\nThe NOMAD School features **50-minute tutorial lectures** by renowned scientists of the field (see below and the PROGRAM) who will introduce their respective topics and address recent exascale achievements and prevailing challenges.\n\nNOMAD anticipates that the exascale challenge, which shows \"exaflops\" performance in some components of the codes, will be met by workflows handling high-throughput calculations and/or complex ensemble averages of statistical mechanics and artificial intelligence. To get more practical insights into all these topics, there will be hands-on tutorials and/or hackathons in the afternoon, run in parallel by key developers of the codes Abinit, exciting, FHI-aims, **GPAW** , and by **developers of ASE/ASR, CC4S and Mini-Apps**. For example:\n\n  * people presently using code A can learn about the possible advantages of code B.\n  * people using any of the codes can learn about and contribute to the workflow management of ASE/AS R.\n  * people using any of the codes can learn about and contribute to the development of the INTERFACE towards CC4S (coupled cluster for solids).\n  * people using any of the codes can learn about and contribute to the development of mini apps to check and analyze their code performance.\n\n\n\nThe school is aimed at graduate students and early-career postdocs.", "eventAttendanceMode": "https://schema.org/OfflineEventAttendanceMode", "eventStatus": "https://schema.org/EventScheduled", "image": {"@type": "ImageObject", "representativeOfPage": "True", "url": "images/placeholder.webp", "width": 720, "height": 260}, "doorTime": "2022-06-15T09:00:00+0200", "startDate": "2022-06-15T09:00:00+0200", "endDate": "2022-06-21T17:00:00+0200", "@id": "https://hpc-portal.eu/node/1325", "isAccessibleForFree": "True", "location": {"@type": "VirtualLocation", "url": "https://www.nomad-coe.eu/events/nomads-midsummer-school-2022-in-riga/NMS22-location", "geo": {"@type": "GeoCoordinates", "latitude": "56.950760352669", "longitude": "24.11623095"}}, "language": ["English"], "sector": ["Research and Academia", "Industry"], "country": ["Latvia"], "projects": ["NOMAD"], "level": ["Beginner", "Intermediate"], "html_description": "<p>With 10^18 floating point operations per second, exascale computers will be able to simulate and analyze complex processes in real materials more realistically than what is possible today. This will allow to study systems of higher complexity (in space and time) and to achieve higher accuracy and precision. In close contact with academia and industry, the <strong>NOMAD CoE</strong> will develop exascale software, artificial intelligence (Al) methods, and efficient workflows for an advanced materials modeling. The <strong>NOMAD School focusses on \"exascale solutions in Green function methods and advanced DFT\"</strong>.</p> <p> The NOMAD School features <strong>50-minute tutorial lectures </strong>by renowned scientists of the field (see below and the PROGRAM) who will introduce their respective topics and address recent exascale achievements and prevailing challenges.</p> <p> NOMAD anticipates that the exascale challenge, which shows \"exaflops\" performance in some components of the codes, will be met by workflows handling high-throughput calculations and/or complex ensemble averages of statistical mechanics and artificial intelligence. To get more practical insights into all these topics, there will be hands-on tutorials and/or hackathons in the afternoon, run in parallel by key developers of the codes Abinit, exciting, FHI-aims, <strong>GPAW</strong>, and by <strong>developers of ASE/ASR, CC4S and Mini-Apps</strong>. For example:</p> <ul> <li>people presently using code A can learn about the possible advantages of code B.</li> <li>people using any of the codes can learn about and contribute to the workflow management of ASE/AS R.</li> <li>people using any of the codes can learn about and contribute to the development of the INTERFACE towards CC4S (coupled cluster for solids).</li> <li>people using any of the codes can learn about and contribute to the development of mini apps to check and analyze their code performance.</li> </ul> <p>The school is aimed at graduate students and early-career postdocs. </p>", "markdown_description": "With 10^18 floating point operations per second, exascale computers will be able to simulate and analyze complex processes in real materials more realistically than what is possible today. This will allow to study systems of higher complexity (in space and time) and to achieve higher accuracy and precision. In close contact with academia and industry, the **NOMAD CoE** will develop exascale software, artificial intelligence (Al) methods, and efficient workflows for an advanced materials modeling. The **NOMAD School focusses on \"exascale solutions in Green function methods and advanced DFT\"**.\n\nThe NOMAD School features **50-minute tutorial lectures** by renowned scientists of the field (see below and the PROGRAM) who will introduce their respective topics and address recent exascale achievements and prevailing challenges.\n\nNOMAD anticipates that the exascale challenge, which shows \"exaflops\" performance in some components of the codes, will be met by workflows handling high-throughput calculations and/or complex ensemble averages of statistical mechanics and artificial intelligence. To get more practical insights into all these topics, there will be hands-on tutorials and/or hackathons in the afternoon, run in parallel by key developers of the codes Abinit, exciting, FHI-aims, **GPAW** , and by **developers of ASE/ASR, CC4S and Mini-Apps**. For example:\n\n  * people presently using code A can learn about the possible advantages of code B.\n  * people using any of the codes can learn about and contribute to the workflow management of ASE/AS R.\n  * people using any of the codes can learn about and contribute to the development of the INTERFACE towards CC4S (coupled cluster for solids).\n  * people using any of the codes can learn about and contribute to the development of mini apps to check and analyze their code performance.\n\n\n\nThe school is aimed at graduate students and early-career postdocs.", "summary": "With 10^18 floating point operations per second, exascale computers will be able to simulate and analyze complex processes in real..."}]}, {"@context": "https://schema.org", "@graph": [{"@type": "Event", "name": "Basics of Programming in Python", "url": "https://itkurzy.sav.sk/node/110", "description": "Python programming for beginners (refresher for more advanced users). Topics include data structures, operators, conditions and loops, but also using modules and packages and working with files. This course includes basics of using Jupyter and running Python programs on HPC Clusters.", "eventAttendanceMode": "https://schema.org/OnlineEventAttendanceMode", "eventStatus": "https://schema.org/EventScheduled", "image": {"@type": "ImageObject", "representativeOfPage": "True", "url": "images/placeholder.webp", "width": 720, "height": 260}, "doorTime": "2022-06-15T10:00:00+0200", "startDate": "2022-06-15T10:00:00+0200", "endDate": "2022-06-16T15:00:00+0200", "@id": "https://hpc-portal.eu/node/878", "isAccessibleForFree": "True", "location": {"@type": "VirtualLocation", "url": "https://itkurzy.sav.sk/kurzy", "geo": {"@type": "GeoCoordinates", "latitude": "48.170727551031", "longitude": "17.0709396"}}, "language": ["Slovak"], "sector": ["Research and Academia", "Industry", "Public Sector", "Other (general public...)"], "country": ["Slovakia"], "projects": ["EuroCC/CASTIEL"], "level": ["Beginner"], "online": ["Live (synchronous)"], "html_description": "<p>Python programming for beginners (refresher for more advanced users). Topics include data structures, operators, conditions and loops, but also using modules and packages and working with files. This course includes basics of using Jupyter and running Python programs on HPC Clusters.</p>", "markdown_description": "Python programming for beginners (refresher for more advanced users). Topics include data structures, operators, conditions and loops, but also using modules and packages and working with files. This course includes basics of using Jupyter and running Python programs on HPC Clusters.", "summary": "Python programming for beginners (refresher for more advanced users). Topics include data structures, operators, conditions and..."}]}, {"@context": "https://schema.org", "@graph": [{"@type": "Event", "name": "High-performance computing with Python (ONLINE)", "url": "https://go.fzj.de/2022-hpc-python", "description": "Python is increasingly used in high-performance computing projects. It can be used either as a high-level interface to existing HPC applications and libraries, as embedded interpreter, or directly.\n\nThis course combines lectures and hands-on sessions. We will show how Python can be used on parallel architectures and how to optimize critical parts of the kernel using various tools.\n\nThe following topics will be covered:\n\n  * Interactive parallel programming with IPython\n  * Profiling and optimization\n  * High-performance NumPy\n  * Just-in-time compilation with numba\n  * Distributed-memory parallel programming with Python and MPI\n  * Bindings to other programming languages and HPC libraries\n  * Interfaces to GPUs\n\n\n\nThis course is aimed at scientists who wish to explore the productivity gains made possible by Python for HPC.\n\nThis course is a PRACE training course.", "eventAttendanceMode": "https://schema.org/OnlineEventAttendanceMode", "eventStatus": "https://schema.org/EventScheduled", "image": {"@type": "ImageObject", "representativeOfPage": "True", "url": "images/placeholder.webp", "width": 720, "height": 260}, "doorTime": "2022-06-20T09:00:00+0200", "startDate": "2022-06-20T09:00:00+0200", "endDate": "2022-06-24T13:00:00+0200", "@id": "https://hpc-portal.eu/node/982", "isAccessibleForFree": "True", "location": {"@type": "VirtualLocation", "url": "https://www.fz-juelich.de/SharedDocs/Termine/IAS/JSC/EN/courses/2022/ptc-hpc-python-2022.html?nn=2800336", "geo": {"@type": "GeoCoordinates", "latitude": "50.909405944835", "longitude": "6.4060592285076"}}, "language": ["English"], "sector": ["Research and Academia", "Industry"], "country": ["Germany"], "projects": ["PRACE"], "level": ["Intermediate", "Advanced"], "online": ["Live (synchronous)"], "html_description": "<p>Python is increasingly used in high-performance computing projects. It can be used either as a high-level interface to existing HPC applications and libraries, as embedded interpreter, or directly.</p> <p>This course combines lectures and hands-on sessions. We will show how Python can be used on parallel architectures and how to optimize critical parts of the kernel using various tools.</p> <p>The following topics will be covered:</p> <ul> <li>Interactive parallel programming with IPython</li> <li>Profiling and optimization</li> <li>High-performance NumPy</li> <li>Just-in-time compilation with numba</li> <li>Distributed-memory parallel programming with Python and MPI</li> <li>Bindings to other programming languages and HPC libraries</li> <li>Interfaces to GPUs</li> </ul> <p>This course is aimed at scientists who wish to explore the productivity gains made possible by Python for HPC.</p> <p>This course is a PRACE training course.</p>", "markdown_description": "Python is increasingly used in high-performance computing projects. It can be used either as a high-level interface to existing HPC applications and libraries, as embedded interpreter, or directly.\n\nThis course combines lectures and hands-on sessions. We will show how Python can be used on parallel architectures and how to optimize critical parts of the kernel using various tools.\n\nThe following topics will be covered:\n\n  * Interactive parallel programming with IPython\n  * Profiling and optimization\n  * High-performance NumPy\n  * Just-in-time compilation with numba\n  * Distributed-memory parallel programming with Python and MPI\n  * Bindings to other programming languages and HPC libraries\n  * Interfaces to GPUs\n\n\n\nThis course is aimed at scientists who wish to explore the productivity gains made possible by Python for HPC.\n\nThis course is a PRACE training course.", "summary": "Python is increasingly used in high-performance computing projects. It can be used either as a high-level interface to existing HPC..."}]}, {"@context": "https://schema.org", "@graph": [{"@type": "Event", "name": "Modern C++ Software Design (Intermediate)", "url": "https://www.hlrs.de/training/2022/CPP3", "description": "This intermediate C++ training is a course on software development with the C++ programming language. The focus of the training are the essential C++ software development principles, concepts, idioms, and best practices, which enable programmers to create professional, high-quality code. The course will give insight into the different aspects of C++ (object-oriented programming, functional programming, generic programming) and will teach guidelines to develop mature, robust, maintainable, and efficient C++ code.\n\nSince 2020 we provide two types of C++ courses, each offered two times per year:\n\n  * **intermediate** : Mar. 8-11, 2022, and June 21-24, 2021 **(this course)**\n  * advanced: May 3-6, 2022, and Nov. 22-25, 2022\n\n\n\nwith two different levels of prerequisites.", "eventAttendanceMode": "https://schema.org/OfflineEventAttendanceMode", "eventStatus": "https://schema.org/EventScheduled", "image": {"@type": "ImageObject", "representativeOfPage": "True", "url": "tmp_images/e688216e2757793021d4abd22e3284bb.webp", "width": 720, "height": 501}, "doorTime": "2022-06-21T08:30:00+0200", "startDate": "2022-06-21T08:30:00+0200", "endDate": "2022-06-24T16:30:00+0200", "@id": "https://hpc-portal.eu/node/825", "isAccessibleForFree": "True", "location": {"@type": "VirtualLocation", "url": "https://www.hlrs.de/contact/how-to-find-us/", "geo": {"@type": "GeoCoordinates", "latitude": "48.739485700985", "longitude": "9.0973166"}}, "language": ["German"], "sector": ["Research and Academia", "Industry", "Public Sector", "Other (general public...)"], "country": ["Germany"], "level": ["Intermediate"], "html_description": "<p>This intermediate C++ training is a course on software development with the C++ programming language. The focus of the training are the essential C++ software development principles, concepts, idioms, and best practices, which enable programmers to create professional, high-quality code. The course will give insight into the different aspects of C++ (object-oriented programming, functional programming, generic programming) and will teach guidelines to develop mature, robust, maintainable, and efficient C++ code.</p> <p>Since 2020 we provide two types of C++ courses, each offered two times per year:</p> <ul> <li><strong>intermediate</strong>: Mar. 8-11, 2022, and June 21-24, 2021 <strong> (this course)</strong></li> <li>advanced: May 3-6, 2022, and Nov. 22-25, 2022</li> </ul> <p>with two different levels of prerequisites.</p>", "markdown_description": "This intermediate C++ training is a course on software development with the C++ programming language. The focus of the training are the essential C++ software development principles, concepts, idioms, and best practices, which enable programmers to create professional, high-quality code. The course will give insight into the different aspects of C++ (object-oriented programming, functional programming, generic programming) and will teach guidelines to develop mature, robust, maintainable, and efficient C++ code.\n\nSince 2020 we provide two types of C++ courses, each offered two times per year:\n\n  * **intermediate** : Mar. 8-11, 2022, and June 21-24, 2021 **(this course)**\n  * advanced: May 3-6, 2022, and Nov. 22-25, 2022\n\n\n\nwith two different levels of prerequisites.", "summary": "This intermediate C++ training is a course on software development with the C++ programming language. The focus of the training are..."}]}, {"@context": "https://schema.org", "@graph": [{"@type": "Event", "name": "Hybrid Programming in HPC - MPI+X", "url": "https://app1.edoobox.com/en/LRZ/Online%20Courses/Online%20Course.ed.2aea539d2ccf_6250920706.Hybrid%20Programming%20in%20HPC%20-%20MPI%2BX%20%28register%20via%20PRACE%29", "description": "Most HPC systems are clusters of shared memory nodes. To use such systems efficiently both memory consumption and communication time has to be optimized. Therefore, hybrid programming may combine the distributed memory parallelization on the node interconnect (e.g., with MPI) with the shared memory parallelization inside of each node (e.g., with OpenMP or MPI-3.0 shared memory). This course analyzes the strengths and weaknesses of several parallel programming models on clusters of SMP nodes. Multi-socket-multi-core systems in highly parallel environments are given special consideration. MPI-3.0 has introduced a new shared memory programming interface, which can be combined with inter-node MPI communication. It can be used for direct neighbor accesses similar to OpenMP or for direct halo copies, and enables new hybrid programming models. These models are compared with various hybrid MPI+OpenMP approaches and pure MPI. Numerous case studies and micro-benchmarks demonstrate the performance-related aspects of hybrid programming.\n\nHands-on sessions are included on all days. Tools for hybrid programming such as thread/process placement support and performance analysis are presented in a \"how-to\" section. This course provides scientific training in Computational Science and, in addition, the scientific exchange of the participants among themselves.\n\nThis online course is a PRACE training event. It is organised by LRZ in cooperation with NHR@FAU, RRZE and the VSC Research Center, TU Wien.", "eventAttendanceMode": "https://schema.org/OnlineEventAttendanceMode", "eventStatus": "https://schema.org/EventScheduled", "image": {"@type": "ImageObject", "representativeOfPage": "True", "url": "images/placeholder.webp", "width": 720, "height": 260}, "doorTime": "2022-06-22T09:00:00+0200", "startDate": "2022-06-22T09:00:00+0200", "endDate": "2022-06-24T16:00:00+0200", "@id": "https://hpc-portal.eu/node/1165", "isAccessibleForFree": "True", "location": {"@type": "VirtualLocation", "url": "https://app1.edoobox.com/en/LRZ/Online%20Courses/Online%20Course.ed.2aea539d2ccf_6250920706.Hybrid%20Programming%20in%20HPC%20-%20MPI%2BX%20%28register%20via%20PRACE%29", "geo": {"@type": "GeoCoordinates", "latitude": "48.261750352317", "longitude": "11.66751545"}}, "language": ["English"], "sector": ["Research and Academia", "Industry"], "country": ["Germany"], "projects": ["PRACE"], "level": ["Advanced"], "online": ["Live (synchronous)"], "html_description": "<p>Most HPC systems are clusters of shared memory nodes. To use such systems efficiently both memory consumption and communication time has to be optimized. Therefore, hybrid programming may combine the distributed memory parallelization on the node interconnect (e.g., with MPI) with the shared memory parallelization inside of each node (e.g., with OpenMP or MPI-3.0 shared memory). This course analyzes the strengths and weaknesses of several parallel programming models on clusters of SMP nodes. Multi-socket-multi-core systems in highly parallel environments are given special consideration. MPI-3.0 has introduced a new shared memory programming interface, which can be combined with inter-node MPI communication. It can be used for direct neighbor accesses similar to OpenMP or for direct halo copies, and enables new hybrid programming models. These models are compared with various hybrid MPI+OpenMP approaches and pure MPI. Numerous case studies and micro-benchmarks demonstrate the performance-related aspects of hybrid programming.</p> <p>Hands-on sessions are included on all days. Tools for hybrid programming such as thread/process placement support and performance analysis are presented in a \"how-to\" section. This course provides scientific training in Computational Science and, in addition, the scientific exchange of the participants among themselves.</p> <p>This online course is a PRACE training event. It is organised by LRZ in cooperation with NHR@FAU, RRZE and the VSC Research Center, TU Wien.</p>", "markdown_description": "Most HPC systems are clusters of shared memory nodes. To use such systems efficiently both memory consumption and communication time has to be optimized. Therefore, hybrid programming may combine the distributed memory parallelization on the node interconnect (e.g., with MPI) with the shared memory parallelization inside of each node (e.g., with OpenMP or MPI-3.0 shared memory). This course analyzes the strengths and weaknesses of several parallel programming models on clusters of SMP nodes. Multi-socket-multi-core systems in highly parallel environments are given special consideration. MPI-3.0 has introduced a new shared memory programming interface, which can be combined with inter-node MPI communication. It can be used for direct neighbor accesses similar to OpenMP or for direct halo copies, and enables new hybrid programming models. These models are compared with various hybrid MPI+OpenMP approaches and pure MPI. Numerous case studies and micro-benchmarks demonstrate the performance-related aspects of hybrid programming.\n\nHands-on sessions are included on all days. Tools for hybrid programming such as thread/process placement support and performance analysis are presented in a \"how-to\" section. This course provides scientific training in Computational Science and, in addition, the scientific exchange of the participants among themselves.\n\nThis online course is a PRACE training event. It is organised by LRZ in cooperation with NHR@FAU, RRZE and the VSC Research Center, TU Wien.", "summary": "Most HPC systems are clusters of shared memory nodes. To use such systems efficiently both memory consumption and communication time..."}]}]